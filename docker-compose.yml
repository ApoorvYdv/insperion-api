services:
  app:
    build:
      context: .
      dockerfile: ./dockerfile
    ports:
      - "8000:8000"
    # command:
    #   [
    #     "gunicorn",
    #     "insperion_api.main:app",
    #     "--workers=4",
    #     "--worker-class=insperion_api.workers.RestartableUvicornWorker",
    #     # "--worker-class=uvicorn.workers.UvicornWorker",  # Use this for production
    #     "--bind=0.0.0.0:8081",
    #     "--access-logfile=-",
    #     "--reload",
    #      "--log-level=debug"
    #   ]

    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=debug
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_ENGINE=postgresql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=insperion_api

    depends_on:
      - db
      - minio
    volumes:
      - ./src/insperion_api:/insperion_api/src/insperion_api
      - ./tests:/insperion_api/tests

  db:
    image: postgres:18-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=insperion_api

    ports:
      - "5433:5432"

    volumes:
      - db:/var/lib/postgresql/data

  minio:
    image: minio/minio
    ports:
        - mode: host
          protocol: tcp
          published: "${MINIO_PORT:-9002}"
          target: 9002
        - mode: host
          protocol: tcp
          published: "${MINIO_CONSOLE_PORT:-9003}"
          target: 9003
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniominio
    command: server --address :"${MINIO_PORT:-9002}" --console-address :"${MINIO_CONSOLE_PORT:-9003}" /data

volumes:
  db:
  minio_storage: {}